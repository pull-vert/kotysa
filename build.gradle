import org.jetbrains.kotlin.config.KotlinCompilerVersion

buildscript {
    ext {
        assertj_version = '3.12.2'
        junit_version = '5.4.2'
        kotlin_logging_version = '1.6.26'
        kotlinx_coroutines_version = '1.2.1'
        logback_version = '1.2.3'
        mokk_version = '1.9.3'
        spring_data_r2dbc_version = '1.0.0.BUILD-SNAPSHOT'
        spring_fu_version = '0.1.BUILD-SNAPSHOT'
        strikt_version = '0.20.0'
    }
}

plugins {
//    id 'org.springframework.boot' version '2.2.0.M2'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
//    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.31'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'org.jetbrains.dokka' version '0.9.18'
}

println("Using Gradle version: $gradle.gradleVersion")
println("Using Kotlin compiler version: $KotlinCompilerVersion.VERSION")

group = 'com.pullvert'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    compileOnly 'io.projectreactor.kotlin:reactor-kotlin-extensions:1.0.0.BUILD-SNAPSHOT'
    compileOnly "org.springframework.data:spring-data-r2dbc:$spring_data_r2dbc_version"
    compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$kotlinx_coroutines_version"

    testImplementation "org.springframework.fu:spring-fu-kofu:$spring_fu_version"
    testImplementation "org.springframework.data:spring-data-r2dbc:$spring_data_r2dbc_version"
    testImplementation 'io.r2dbc:r2dbc-h2'
    testImplementation 'com.h2database:h2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testImplementation "io.strikt:strikt-core:$strikt_version"
    testImplementation "io.mockk:mockk:$mokk_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "ch.qos.logback:logback-classic:$logback_version"
//    testImplementation 'org.springframework:spring-test'
//    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
}

dependencyManagement {
    imports {
        mavenBom("io.r2dbc:r2dbc-bom:Arabba-BUILD-SNAPSHOT")
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-Xjvm-default=enable']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-Xjvm-default=enable']
        jvmTarget = '1.8'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'failed', 'skipped'
        showStandardStreams = true
    }
}

// execute ./gradlew wrapper then remove .gradle directory when version change
wrapper {
    gradleVersion = '5.4.1'
    distributionType = Wrapper.DistributionType.ALL
}
